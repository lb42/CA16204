namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2017-12-08T10:51:28Z. .
# TEI Edition: Version 3.3.0a. Last updated on
#	17th November 2017, revision 6711c60
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 3.3.0a./
#

# Creative Commons Attribution 4.0.
macro.paraContent =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.global
   | model.lLike)*
macro.phraseSeq = (text | model.gLike | model.phrase | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
macro.xtext = (text | model.gLike)*
data.temporal.iso =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
  | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI+ }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list { xsd:anyURI+ }
  }?
att.ranging.attributes =
  att.ranging.attribute.atLeast,
  att.ranging.attribute.atMost,
  att.ranging.attribute.min,
  att.ranging.attribute.max,
  att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.confidence =
  
  ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
  attribute confidence { xsd:double }?
att.dimensions.attributes =
  att.ranging.attributes,
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity,
  att.dimensions.attribute.extent,
  att.dimensions.attribute.precision,
  att.dimensions.attribute.scope
att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.written.attributes = att.written.attribute.hand
att.written.attribute.hand =
  
  ## points to a handNote element describing the hand considered responsible for the textual content of the element concerned.
  attribute hand { xsd:anyURI }?
att.cReferencing.attributes = att.cReferencing.attribute.cRef
att.cReferencing.attribute.cRef =
  
  ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a refsDecl element in the TEI header
  attribute cRef { xsd:string }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.datable.w3c-att-datable-w3c-when-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.datable.w3c-att-datable-w3c-from-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.datable.w3c-att-datable-w3c-to-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attributes =
  att.datable.w3c.attributes,
  att.datable.iso.attributes,
  att.datable.custom.attributes,
  att.datable.attribute.calendar,
  att.datable.attribute.period
att.datable.attribute.calendar =
  
  ## indicates the system or calendar to which the date represented by the content of this element belongs.
  attribute calendar { xsd:anyURI }?
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.datable-calendar-calendar-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attribute.period =
  
  ## supplies a pointer to some location defining a named period of time within which the datable item is understood to have occurred.
  attribute period { xsd:anyURI }?
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
att.declaring.attributes = att.declaring.attribute.decls
att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list { xsd:anyURI+ }
  }?
att.fragmentable.attributes = att.fragmentable.attribute.part
att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
att.docStatus.attributes = att.docStatus.attribute.status
att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.global.responsibility.attributes =
  att.global.responsibility.attribute.cert,
  att.global.responsibility.attribute.resp
att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?
att.editLike.attributes =
  att.dimensions.attributes,
  att.editLike.attribute.evidence,
  att.editLike.attribute.instant
att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
att.global.rendition.attributes =
  att.global.rendition.attribute.rend,
  att.global.rendition.attribute.style,
  att.global.rendition.attribute.rendition
att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list { xsd:anyURI+ }
  }?
att.global.source.attributes = att.global.source.attribute.source
att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list { xsd:anyURI+ }
  }?
att.global.attributes =
  att.global.rendition.attributes,
  att.global.responsibility.attributes,
  att.global.source.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.xmlbase,
  att.global.attribute.xmlspace
att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated according to BCP 47.
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base { xsd:anyURI }?
att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
att.handFeatures.attribute.scribe =
  
  ## gives a name or other identifier for the scribe believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
att.handFeatures.attribute.scribeRef =
  
  ## points to a full description of the scribe concerned, typically supplied by a person element elsewhere in the description.
  attribute scribeRef {
    list { xsd:anyURI+ }
  }?
att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name+ }
  }?
att.handFeatures.attribute.scriptRef =
  
  ## points to a full description of the script or writing style used by this hand, typically supplied by a scriptNote element elsewhere in the description.
  attribute scriptRef {
    list { xsd:anyURI+ }
  }?
att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other writing medium, e.g. pencil
  attribute medium {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.handFeatures.attribute.scope =
  
  ## specifies how widely this hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
att.internetMedia.attributes = att.internetMedia.attribute.mimeType
att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.naming.attributes =
  att.canonical.attributes,
  att.naming.attribute.role,
  att.naming.attribute.nymRef
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list { xsd:anyURI+ }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.typed-subtypeTyped-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes =
  att.pointing.attribute.targetLang,
  att.pointing.attribute.target,
  att.pointing.attribute.evaluate
att.pointing.attribute.targetLang =
  
  ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.pointing-targetLang-targetLang-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { xsd:anyURI+ }
  }?
att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
model.nameLike.agent = orgName | persName
model.nameLike.agent_alternation = orgName | persName
model.nameLike.agent_sequence = orgName, persName
model.nameLike.agent_sequenceOptional = orgName?, persName?
model.nameLike.agent_sequenceOptionalRepeatable = orgName*, persName*
model.nameLike.agent_sequenceRepeatable = orgName+, persName+
model.segLike = notAllowed
model.hiLike = notAllowed
model.hiLike_alternation = notAllowed
model.hiLike_sequence = empty
model.hiLike_sequenceOptional = empty
model.hiLike_sequenceOptionalRepeatable = empty
model.hiLike_sequenceRepeatable = notAllowed
model.emphLike = title
model.emphLike_alternation = title
model.emphLike_sequence = title
model.emphLike_sequenceOptional = title?
model.emphLike_sequenceOptionalRepeatable = title*
model.emphLike_sequenceRepeatable = title+
model.highlighted = model.hiLike | model.emphLike
model.dateLike = date
model.dateLike_alternation = date
model.dateLike_sequence = date
model.dateLike_sequenceOptional = date?
model.dateLike_sequenceOptionalRepeatable = date*
model.dateLike_sequenceRepeatable = date+
model.measureLike = notAllowed
model.measureLike_alternation = notAllowed
model.measureLike_sequence = empty
model.measureLike_sequenceOptional = empty
model.measureLike_sequenceOptionalRepeatable = empty
model.measureLike_sequenceRepeatable = notAllowed
model.egLike = notAllowed
model.graphicLike = notAllowed
model.offsetLike = notAllowed
model.offsetLike_alternation = notAllowed
model.offsetLike_sequence = empty
model.offsetLike_sequenceOptional = empty
model.offsetLike_sequenceOptionalRepeatable = empty
model.offsetLike_sequenceRepeatable = notAllowed
model.pPart.msdesc =
  locus | locusGrp | objectType | origDate | origPlace
model.pPart.editorial = notAllowed
model.pPart.editorial_alternation = notAllowed
model.pPart.editorial_sequence = empty
model.pPart.editorial_sequenceOptional = empty
model.pPart.editorial_sequenceOptionalRepeatable = empty
model.pPart.editorial_sequenceRepeatable = notAllowed
model.pPart.transcriptional = notAllowed
model.pPart.transcriptional_alternation = notAllowed
model.pPart.transcriptional_sequence = empty
model.pPart.transcriptional_sequenceOptional = empty
model.pPart.transcriptional_sequenceOptionalRepeatable = empty
model.pPart.transcriptional_sequenceRepeatable = notAllowed
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.ptrLike = ref
model.lPart = notAllowed
model.global.meta = notAllowed
model.milestoneLike = notAllowed
model.gLike = notAllowed
model.oddDecl = elementSpec
model.oddRef = notAllowed
model.phrase.xml = notAllowed
model.specDescLike = notAllowed
model.biblLike = msDesc
model.headLike = notAllowed
model.labelLike = notAllowed
model.listLike = notAllowed
model.noteLike = notAllowed
model.lLike = notAllowed
model.pLike = p
model.stageLike = notAllowed
model.global.edit = notAllowed
model.divPart = model.lLike | model.pLike | schemaSpec
model.placeNamePart = notAllowed
model.placeNamePart_alternation = notAllowed
model.placeNamePart_sequence = empty
model.placeNamePart_sequenceOptional = empty
model.placeNamePart_sequenceOptionalRepeatable = empty
model.placeNamePart_sequenceRepeatable = notAllowed
model.placeStateLike = model.placeNamePart
model.placeStateLike_alternation = model.placeNamePart_alternation
model.placeStateLike_sequence = model.placeNamePart_sequence
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+
model.publicationStmtPart.agency = publisher
model.publicationStmtPart.detail =
  model.ptrLike | date | pubPlace | idno
model.descLike = notAllowed
model.glossLike = notAllowed
model.quoteLike = notAllowed
model.quoteLike_alternation = notAllowed
model.quoteLike_sequence = empty
model.quoteLike_sequenceOptional = empty
model.quoteLike_sequenceOptionalRepeatable = empty
model.quoteLike_sequenceRepeatable = notAllowed
model.qLike = model.quoteLike
model.respLike = author | editor
model.addressLike = notAllowed
model.addressLike_alternation = notAllowed
model.addressLike_sequence = empty
model.addressLike_sequenceOptional = empty
model.addressLike_sequenceOptionalRepeatable = empty
model.addressLike_sequenceRepeatable = notAllowed
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | idno
  | model.persNamePart
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | idno
  | model.persNamePart_alternation
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  idno,
  model.persNamePart_sequence
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  idno?,
  model.persNamePart_sequenceOptional?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  idno*,
  model.persNamePart_sequenceOptionalRepeatable*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  idno+,
  model.persNamePart_sequenceRepeatable+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.inter =
  model.egLike
  | model.oddDecl
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.qLike
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.lPart
  | model.phrase.xml
  | model.specDescLike
  | model.pPart.data
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.phrase.xml
  | model.pPart.data
model.teiHeaderPart = encodingDesc | profileDesc
model.sourceDescPart = recordHist
model.encodingDescPart = schemaSpec
model.profileDescPart = langUsage
model.resourceLike = \text
att.personal.attributes =
  att.naming.attributes,
  att.personal.attribute.full,
  att.personal.attribute.sort
att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    macro.paraContent
    >> sch:pattern [
         id =
           "teiODD_LAUDATIODocument_S7.1-p-abstractModel-structure-p-constraint-report-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(ancestor::tei:floatingText) and (ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum                |parent::tei:item                |parent::tei:note                |parent::tei:q                |parent::tei:quote                |parent::tei:remarks                |parent::tei:said                |parent::tei:sp                |parent::tei:stage                |parent::tei:cell                |parent::tei:figure                )"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not occur inside other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "teiODD_LAUDATIODocument_S7.1-p-abstractModel-structure-l-constraint-report-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:p[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.declaring.attributes,
    att.fragmentable.attributes,
    att.written.attributes,
    empty
  }
date =
  
  ## contains a date in any format. [3.5.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.3.6. Dates and Times]
  element date {
    (text | model.gLike | model.phrase | model.global)*,
    att.typed.attribute.type,
    
    ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
    attribute when { data.temporal.iso },
    empty
  }
ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6. Simple Links and Cross-References 16.1. Links]
  element ref {
    macro.paraContent
    >> sch:pattern [
         id =
           "teiODD_LAUDATIODocument_S7.1-ref-refAtts-constraint-report-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.pointing.attributes,
    att.internetMedia.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    att.cReferencing.attributes,
    empty
  }
author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    ## Sample values include: 
    attribute n { xsd:string }?,
    empty
  }
editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.11.2.2. Titles, Authors, and Editors]
  element editor {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    ## Sample values include: 
    attribute n { xsd:string }?,
    empty
  }
title =
  
  ## contains a title for any kind of work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    macro.paraContent,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.datable.attributes,
    
    ## (The specification of the ODD refering to the objects of the class
    ##                     'Document'.) classifies the title according to some convenient typology.
    attribute type {
      
      ## (The title only refers to the metadata object 'Document') 
      "Document"
    }?,
    empty
  }
publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher { macro.phraseSeq, att.global.attributes, empty }
biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element biblScope { macro.phraseSeq, att.global.attributes, empty }
pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    macro.phraseSeq, att.global.attributes, att.naming.attributes, empty
  }
teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (fileDesc, model.teiHeaderPart*, revisionDesc?),
    att.global.attribute.n,
    att.global.rendition.attribute.style,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((titleStmt, extent?, publicationStmt, seriesStmt?), sourceDesc+),
    att.global.attribute.xmlid,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (title+, model.respLike*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
extent =
  
  ## describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3. Type and Extent of File 2.2. The File Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 10.7.1. Object Description]
  element extent {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attribute.subtype,
    
    ## (Indicate the type of measure you you to inform abput the size of the
    ##                     corpus.) characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type {
      
      ## (The size of the corpus is given in token.) 
      "Tokens"
      | 
        ## (The size of the corpus is given in words.) 
        "Words"
    },
    empty
  }
publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((model.publicationStmtPart.agency,
      model.publicationStmtPart.detail*)+
     | model.pLike+),
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | model.gLike | idno)*,
    att.global.attributes,
    att.sortable.attributes,
    att.datable.attributes,
    att.typed.attribute.subtype,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
    attribute type {
      
      ## International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the International ISBN Agency.
      "ISBN"
      | 
        ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
        "ISSN"
      | 
        ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
        "DOI"
      | 
        ## Uniform Resource Identifier: a string of characters to uniquely identify a resource which usually contains indication of the means of accessing that resource, the name of its host, and its filepath.
        "URI"
      | 
        ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
        "VIAF"
      | 
        ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
        "ESTC"
      | 
        ## OCLC control number (record number) for the union catalog record in WorldCat, a union catalog for member libraries in the Online Computer Library Center global cooperative.
        "OCLC"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which a publication belongs. [2.2.5. The Series Statement 2.2. The File Description]
  element seriesStmt {
    (model.pLike+
     | (title+, (editor)*, (idno | biblScope)*)),
    att.global.attributes,
    empty
  }
sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (model.encodingDescPart | model.pLike)+,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4. The Profile Description 2.1.1. The TEI Header and Its Components]
  element profileDesc {
    model.profileDescPart*,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 15.3.2. Declarable Elements]
  element langUsage {
    (model.pLike+ | language+),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
language =
  
  ## characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    macro.phraseSeq.limited,
    att.global.attribute.n,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
    attribute style {
      
      ##
      "Language"
      | 
        ##
        "LanguageType"
      | 
        ##
        "LanguageArea"
    },
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    empty
  }
revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (change+),
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace,
    att.global.rendition.attribute.rend,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.docStatus.attributes,
    empty
  }
change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    macro.specialPara,
    att.ascribed.attributes,
    att.datable.attributes,
    att.docStatus.attributes,
    att.global.attributes,
    att.typed.attributes,
    
    ## points to one or more elements that belong to this change.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
TEI =
  
  ## (TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resourceLike class. Multiple TEI elements may be combined to form a teiCorpus element. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element TEI {
    (teiHeader, model.resourceLike+)
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    att.global.attributes,
    att.typed.attributes,
    
    ## specifies the major version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
\text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (model.global*, empty, model.global*),
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    att.written.attributes,
    empty
  }
att.combinable.attribute.mode =
  
  ## specifies the effect of this declaration on its parent object.
  [ a:defaultValue = "add" ]
  attribute mode {
    
    ## this declaration is added to the current definitions
    "add"
    | 
      ## if present already, the whole of the declaration for this object is removed from the current setup
      "delete"
    | 
      ## this declaration changes the declaration of the same name in the current definition
      "change"
    | 
      ## this declaration replaces the declaration of the same name in the current definition
      "replace"
  }?
att.identified.attribute.ident =
  
  ## supplies the identifier by which this element may be referenced.
  attribute ident { xsd:Name }
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.identified-spec-in-module-constraint-rule-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context =
      "tei:elementSpec[@module]|tei:classSpec[@module]|tei:macroSpec[@module]"
    "\x{a}" ~
    "        "
    sch:assert [
      test =
        "         (not(ancestor::tei:schemaSpec | ancestor::tei:TEI | ancestor::tei:teiCorpus)) or         (not(@module) or          (not(//tei:moduleSpec) and not(//tei:moduleRef))  or         (//tei:moduleSpec[@ident = current()/@module]) or          (//tei:moduleRef[@key = current()/@module]))         "
      "\x{a}" ~
      "        Specification "
      sch:value-of [ select = "@ident" ]
      ': the value of the module attribute ("'
      sch:value-of [ select = "@module" ]
      '") \x{a}' ~
      "should correspond to an existing module, via a moduleSpec or\x{a}" ~
      "      moduleRef"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.deprecated.attributes = att.deprecated.attribute.validUntil
att.deprecated.attribute.validUntil =
  
  ## provides a date before which the construct being defined will not be removed.
  attribute validUntil { xsd:date }?
sch:pattern [
  id =
    "teiODD_LAUDATIODocument_S7.1-att.deprecated-validUntil-deprecated-constraint-rule-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@validUntil]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@validUntil cast as xs:date ge          current-date()"
      "\x{a}" ~
      "            "
      sch:value-of [
        select =
          "if          (@ident) then concat('The ',@ident) else          concat('This ',local-name(.),' of          ',ancestor::tei:*[@ident][1]/@ident)"
      ]
      "\x{a}" ~
      "	    construct is outdated (as of "
      sch:value-of [ select = "@validUntil" ]
      "); ODD processors may ignore it, and its use is no longer supported"
    ]
    "\x{a}" ~
    "            "
    sch:assert [
      role = "nonfatal"
      test =
        "@validUntil cast as xs:date ge          (current-date() + (60*xs:dayTimeDuration('P1D')))"
      "\x{a}" ~
      "            "
      sch:value-of [
        select =
          "if (@ident) then concat('The ',@ident) else concat('This ',local-name(.),' of ',ancestor::tei:*[@ident][1]/@ident)"
      ]
      "  construct becomes outdated on "
      sch:value-of [ select = "@validUntil" ]
      "\x{a}" ~
      "         "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
schemaSpec =
  
  ## (schema specification) generates a TEI-conformant schema and documentation for it. [2.3. The Encoding Description 22.2. Modules and Schemas 23.5.1. Making a Unified ODD]
  element schemaSpec {
    ((model.glossLike | model.descLike)*,
     (model.oddRef | model.oddDecl)*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.identified.attribute.ident,
    att.deprecated.attribute.validUntil,
    
    ## (default namespace exclusions) provides a list of namespaces and/or prefixed element names to be excluded by default from anyName in RELAX NG schemas
    [ a:defaultValue = "http://www.tei-c.org/ns/1.0 teix:egXML" ]
    attribute defaultExceptions {
      list {
        (xsd:anyURI { pattern = "[^/]+:.*" }
         | xsd:Name { pattern = ".+:.+" })+
      }
    }?,
    empty
  }
elementSpec =
  
  ## (element specification) documents the structure, content, and purpose of a single element type. [22.5. Element Specifications 22. Documentation Elements]
  element elementSpec {
    ((model.glossLike | model.descLike)*, valList?, empty*),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.deprecated.attribute.validUntil,
    
    ## supplies the identifier by which this element may be referenced.
    attribute ident {
      
      ##
      "Lexical"
      | 
        ##
        "Syntactical"
      | 
        ##
        "Morphological"
      | 
        ##
        "MarkUp"
      | 
        ##
        "Graphical"
      | 
        ##
        "Transcription"
      | 
        ##
        "Other"
      | 
        ##
        "Meta"
    },
    empty
  }
valItem =
  
  ## documents a single value in a predefined list of values. [22.5.4. Attribute List Specification]
  element valItem {
    (model.descLike | model.glossLike)*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.deprecated.attribute.validUntil,
    
    ##
    attribute corresp { text },
    
    ## specifies the value concerned.
    attribute ident { xsd:string },
    empty
  }
valList =
  
  ## (value list) contains one or more valItem elements defining possible values. [22.5.4. Attribute List Specification]
  element valList {
    valItem*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.deprecated.attribute.validUntil,
    empty
  }
att.datable.custom.attributes =
  att.datable.custom.attribute.when-custom,
  att.datable.custom.attribute.notBefore-custom,
  att.datable.custom.attribute.notAfter-custom,
  att.datable.custom.attribute.from-custom,
  att.datable.custom.attribute.to-custom,
  att.datable.custom.attribute.datingPoint,
  att.datable.custom.attribute.datingMethod
att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint { xsd:anyURI }?
att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { xsd:anyURI }?
model.persNamePart = surname | forename
model.persNamePart_alternation = surname | forename
model.persNamePart_sequence = surname, forename
model.persNamePart_sequenceOptional = surname?, forename?
model.persNamePart_sequenceOptionalRepeatable = surname*, forename*
model.persNamePart_sequenceRepeatable = surname+, forename+
att.datable.iso.attributes =
  att.datable.iso.attribute.when-iso,
  att.datable.iso.attribute.notBefore-iso,
  att.datable.iso.attribute.notAfter-iso,
  att.datable.iso.attribute.from-iso,
  att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
orgName =
  
  ## (organization name) contains an organizational name. [13.2.2. Organizational Names]
  element orgName {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. Personal Names]
  element persName { macro.phraseSeq }
surname =
  
  ## contains a family (inherited) name, as opposed to a given, baptismal, or nick name. [13.2.1. Personal Names]
  element surname {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
forename =
  
  ## contains a forename, given or baptismal name. [13.2.1. Personal Names]
  element forename {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object. [10.1. Overview]
  element msDesc {
    (msIdentifier,
     model.headLike*,
     (model.pLike+
      | (history?, (msFrag*)))),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.declaring.attributes,
    att.docStatus.attributes,
    empty
  }
locus =
  
  ## defines a location within a manuscript or manuscript part, usually as a (possibly discontinuous) sequence of folio references. [10.3.5. References to Locations within a Manuscript]
  element locus {
    (text | model.gLike | locus)*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    att.typed.attributes,
    empty
  }
locusGrp =
  
  ## groups a number of locations which together form a distinct but discontinuous item within a manuscript or manuscript part, according to a specific foliation. [10.3.5. References to Locations within a Manuscript]
  element locusGrp {
    locus+,
    att.global.attributes,
    
    ## identifies the foliation scheme in terms of which all the locations contained by the group are specified by pointing to some foliation element defining it, or to some other equivalent resource.
    attribute scheme { xsd:anyURI }?,
    empty
  }
objectType =
  
  ## contains a word or phrase describing the type of object being referred to. [10.3.2. Material and Object Type]
  element objectType {
    macro.phraseSeq,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
origDate =
  
  ## (origin date) contains any form of date, used to identify the date of origin for a manuscript or manuscript part. [10.3.1. Origination]
  element origDate {
    (text | model.gLike | model.phrase | model.global)*,
    att.datable.custom.attribute.notBefore-custom,
    att.datable.custom.attribute.notAfter-custom,
    att.dimensions.attribute.precision,
    empty
  }
origPlace =
  
  ## (origin place) contains any form of place name, used to identify the place of origin for a manuscript or manuscript part. [10.3.1. Origination]
  element origPlace { macro.phraseSeq }
msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript being described. [10.4. The Manuscript Identifier]
  element msIdentifier {
    ((repository?, collection*, idno?), (msName | altIdentifier)*)
    >> sch:pattern [
         id =
           "teiODD_LAUDATIODocument_S7.1-msIdentifier-msId_minimal-constraint-report-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(parent::tei:msPart) and       (local-name(*[1])='idno' or       local-name(*[1])='altIdentifier' or       normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location of some type, or a manuscript name"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
repository =
  
  ## contains the name of a repository within which manuscripts are stored, possibly forming part of an institution. [10.4. The Manuscript Identifier]
  element repository {
    macro.xtext,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
collection =
  
  ## contains the name of a collection of manuscripts, not necessarily located within a single repository. [10.4. The Manuscript Identifier]
  element collection {
    macro.xtext,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for a manuscript, such as a former catalogue number. [10.4. The Manuscript Identifier]
  element altIdentifier {
    (repository?, collection?, idno),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
msName =
  
  ## (alternative name) contains any form of unstructured alternative name used for a manuscript, such as an ocellus nominum, or nickname. [10.4. The Manuscript Identifier]
  element msName {
    (text | model.gLike)*,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
history =
  
  ## groups elements describing the full history of a manuscript or manuscript part. [10.8. History]
  element history {
    (model.pLike+ | origin?),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
origin =
  
  ## contains any descriptive or other information concerning the origin of a manuscript or manuscript part. [10.8. History]
  element origin { macro.specialPara }
recordHist =
  
  ## (recorded history) provides information about the source and revision status of the parent manuscript description itself. [10.9.1. Administrative Information]
  element recordHist {
    (model.pLike+ | (source, change*)),
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    empty
  }
source =
  
  ## describes the original source for the information contained with a manuscript description. [10.9.1.1. Record History]
  element source {
    macro.specialPara,
    att.global.responsibility.attribute.cert,
    att.global.responsibility.attribute.resp,
    att.global.source.attribute.source,
    
    ##
    attribute facs { text },
    empty
  }
msFrag =
  
  ## (manuscript fragment) contains information about a fragment of a scattered manuscript now held as a single unit or bound into a larger manuscript. [10.11. Manuscript Fragments]
  element msFrag {
    ((altIdentifier | msIdentifier),
     model.headLike*,
     (model.pLike+ | history?)),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
start = TEI
